#한 마을에 모험가가 N명
#N 명의 모험가를 대상으로 공포도 측정
#공포도가 높으면 쉽게 공포를 느낌
#공포도가 X 인 모험가는 반드시 X명 이상으로 구성한 모험가 그룹에 참여해야 여행을 떠날 수 있음
#여행을 떠날 수 있는 그룹 수의 최댓값 구하기
n = int(input())
data = list(map(int, input().split()))
data.sort() #공포도가 오름차순으로 정렬되어 있다는 점에서 항상 최소한의 모험가의 수만 포함하여 그룹을 결성하게 된다.
            # 그러므로 최대한 많은 그룹이 구성되는 방법이다.

result = 0 # 총 그룹의 수
count = 0 # 현재 그룹에 포함된 모험가의 수

for i in data: #공포도가 낮은 것 부터 하나씩 확인
    count += 1 #현재 그룹에 해당 모험가( i )를 포함시키기
    if count >= i: #현재 그룹에 포함된 모험가의 수가 현재의 공포도 이상히라면 그룹 결성
        result += 1 # 그룹의 수 증가시키기
        count = 0 # 현재 그룹에 포함된 모험가의 수 초기화